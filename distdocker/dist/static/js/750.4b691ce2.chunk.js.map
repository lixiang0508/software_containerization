{"version":3,"file":"static/js/750.4b691ce2.chunk.js","mappings":"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","sources":["pages/BlogDetail/store/actionCreator.js","pages/BlogDetail/index.js"],"sourcesContent":["import axios from 'axios'\nimport {CHANGE_BLOGDTEAIL} from \"./constant\";\nimport {PATH} from \"../../../redux/constant\";\n\nconst changeDetail = (result) =>(\n    {\n        type:CHANGE_BLOGDTEAIL,\n        title:result.title,\n        content:result.text,\n        img:result.img,\n        hits:result.hits,\n        likes:result.likes,\n        comments:result.comments\n\n    }\n)\nexport const getBlogDetail =(id)=>{\n    return (dispatch)=>{\n        axios.get(PATH+'blog/get/'+id).then(res =>{\n            console.log('blog detail is',res.data.data);\n            //console.log('current img is',res.data.data.img);\n            const result = res.data.data;\n            dispatch(changeDetail(result))\n\n            }\n\n\n        )\n    }\n}","\nimport React,{PureComponent} from 'react';\nimport {DetailWrapper,Header,Content,Text,CommentWrapper,CommentTitle,CommentBody,CommentFooter,CommentList,CommentItem,Commenter,CommentContent} from \"./style\";\nimport {connect} from \"react-redux\";\nimport {actionCreator} from \"./store\"\nimport {withRouter} from \"react-router-dom\";\nimport axios from \"axios\";\n\nclass BlogDetail extends PureComponent {\n      state={blogCommentList:[]}\n     componentDidMount() {\n         const blogId=this.props.match.params.id;\n         this.props.getBlogDetail(blogId);\n         //请求当前blog的所有评论\n         axios.get(`http://localhost:8085/blogComment/check/`+blogId).then(\n             res => {\n                 console.log(res.data);\n                 const resp= res.data.data;\n                 this.setState({blogCommentList:resp})\n\n             },\n             error=>{\n                 console.log(error);\n             }\n         );\n\n     }\n\n\n     publishComment = (id,commentText)=>{\n          axios.post('http://localhost:8085/blogComment/add',\n              {\n                  headers:{\n                      'token':localStorage.getItem('user_token')\n                  },\n          blogId:id,\n              comment:commentText\n\n          }).then(\n              res=>{\n                  let errcode= res.data.err;\n\n                  console.log('添加评论返回',res);\n                  if(errcode===0){\n                      alert('Comment added success')\n                      this.setState({'':''})\n                  }else{\n                      alert('Comment added failed')\n                  }\n              }\n          )\n\n     }\n\n     render(){\n         console.log('当前props',this.props);\n         const {blogCommentList} = this.state;\n        return (\n            <DetailWrapper>\n                <Header>{this.props.title} </Header>\n                <Content>\n                  <img src={`../../../images/article`+this.props.match.params.id+`.jpeg`} />\n\n                    <Text dangerouslySetInnerHTML={{__html:this.props.content}} >\n\n                    </Text>\n\n\n                </Content>\n                <CommentWrapper>\n                   <CommentTitle>\n                     <span>Any feelings?</span>\n                   </CommentTitle>\n                    <CommentBody>\n                        <textarea cols=\"50\" rows=\"10\" placeholder=\"Leave your comment!\" ref={input => {this.commentText=input}}></textarea>\n                        <button onClick={()=>this.publishComment(this.props.match.params.id,this.commentText.value)}>Publish comment</button>\n                    </CommentBody>\n                    <CommentFooter>\n                    <p><span>{this.props.hits}&nbsp;</span>Readings,&nbsp;<span>{this.props.comments}</span>&nbsp;Comments</p>\n                    </CommentFooter>\n                </CommentWrapper>\n                <br/>\n                <br/>\n                <CommentList>\n                    <p>Comments</p>\n\n\n                    {\n                        blogCommentList.map( (item)=>{\n                            return (\n                                <CommentItem key={item.id}>\n                                    <Commenter>\n                                        {item.customerName} &nbsp;<span>{item.createTime.substr(0,10)}</span>\n                                    </Commenter>\n                                    <CommentContent>\n                                        {item.comment}\n                                    </CommentContent>\n\n                                </CommentItem>\n\n                            )\n                            }\n\n                        )\n                    }\n\n\n\n                </CommentList>\n            </DetailWrapper>\n        )\n    }\n}\n\n\nconst mapState = (state)=>({\n     title:state.getIn(['blogDetail','title']),\n    content:state.getIn(['blogDetail','content']),\n    img:state.getIn(['blogDetail','img']),\n    hits:state.getIn(['blogDetail','hits']),\n    comments:state.getIn(['blogDetail','comments']),\n    likes:state.getIn(['blogDetail','likes'])\n\n})\n\nconst mapDispatch =(dispatch)=>({\n    getBlogDetail(id){\n   dispatch(actionCreator.getBlogDetail(id));\n    }\n\n})\nexport default connect(mapState,mapDispatch)(withRouter(BlogDetail));"],"names":["getBlogDetail","id","dispatch","axios","PATH","then","res","console","log","data","result","type","CHANGE_BLOGDTEAIL","title","content","text","img","hits","likes","comments","changeDetail","BlogDetail","state","blogCommentList","publishComment","commentText","headers","localStorage","getItem","blogId","comment","errcode","err","alert","setState","this","props","match","params","resp","error","src","dangerouslySetInnerHTML","__html","cols","rows","placeholder","ref","input","onClick","value","map","item","customerName","createTime","substr","PureComponent","connect","getIn","actionCreator","withRouter"],"sourceRoot":""}